Database Design Improvement:
	Instead of having a DB Layer that has different methods for retrieving various data from in a table and return a cursor for each of the data, implement one method that can get any data from any columns of any table, then create another class that can take the columns and tables of the required data and build a DB query string from it. With this design, we can reduce the performance of the application by reducing the numbers of cursors, and the extensibility of the application can be improved because if we require to add new features to retrieve new combinations of data from the DB, we do not need to modify the code to support this.
	However, the trade-off is development time, as this feature would require comprehensive knowledge of the SQL language, so we can interpret and parse SQL queries on the fly. The testing time would greatly increase as we would have to anticipate possible future usage of accessing the DB, therefore our test cases would have to include future use cases as well.